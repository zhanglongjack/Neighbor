<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neighbor.app.withdraw.dao.WithdrawMapper">
  <resultMap id="BaseResultMap" type="com.neighbor.app.withdraw.entity.Withdraw">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="u_id" jdbcType="BIGINT" property="uId" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="available_amount" jdbcType="DECIMAL" property="availableAmount" />
    <result column="bank_card_no" jdbcType="VARCHAR" property="bankCardNo" />
    <result column="branch_info" jdbcType="VARCHAR" property="branchInfo" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="states" jdbcType="CHAR" property="states" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="actual_amount" jdbcType="DECIMAL" property="actualAmount" />
    <result column="cost" jdbcType="DECIMAL" property="cost" />
  </resultMap>
  <sql id="Base_Column_List">
    id, order_no, create_time, update_time, u_id, amount,available_amount, bank_card_no, branch_info, real_name,
    states, remarks,actual_amount,cost
  </sql>
  
  <sql id="dynamicWhere">
		<where>
			<if test="id != null">id=#{id}</if>
			<if test="uId != null">and u_id=#{uId}</if>
			<if test="bankCardNo != null and bankCardNo.length()>0">and bank_card_no=#{bankCardNo}</if>
			<if test="branchInfo != null and branchInfo.length()>0">and branch_info=#{branchInfo}</if>
			<if test="realName != null and realName.length()>0">and real_name=#{realName}</if>
		    <if test="states != null and states.length()>0">and states=#{states}</if>
			<if test="orderNo != null and orderNo.length()>0">and order_no=#{orderNo}</if>
            <if test="shortDate != null and shortDate.length()>0">and date_format(create_time ,'%Y-%m-%d') = #{shortDate}</if>

		</where>
	</sql>
	
  <select id="selectAll" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from withdraw
		order by create_time
	</select>
  
	<select id="selectPageByObjectForList" parameterType="com.neighbor.app.withdraw.entity.Withdraw"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from withdraw
		<include refid="dynamicWhere" />
		order by create_time desc
		limit #{pageTools.rowIndex},#{pageTools.pageSize}
	</select>
	
	<select id="selectPageTotalCount" parameterType="com.neighbor.app.withdraw.entity.Withdraw"
		resultType="Long">
		select
			count(1)
		from withdraw
		<include refid="dynamicWhere" />
	</select>
  
	<select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
	  select 
	  <include refid="Base_Column_List" />
	  from withdraw
	  where id = #{id,jdbcType=BIGINT}
	</select>
  
	<select id="querySumWithdrawByComplete" resultType="java.math.BigDecimal">
		SELECT 
			sum(actual_amount) actualAmount 
		FROM withdraw w 
		where w.states = 'success' 
	</select>
	
	<select id="querySumWithdrawByIncomplete" resultType="java.math.BigDecimal">
		SELECT 
			sum(amount) amount 
		FROM withdraw w 
		where w.states in('initial','processing') 
	</select>
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from withdraw
    where id = #{id,jdbcType=BIGINT}
  </delete>
 
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.neighbor.app.withdraw.entity.Withdraw">
    insert into withdraw
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="uId != null">
        u_id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="availableAmount != null">
        available_amount,
      </if>
      <if test="bankCardNo != null">
        bank_card_no,
      </if>
      <if test="branchInfo != null">
        branch_info,
      </if>
      <if test="realName != null">
        real_name,
      </if>
      <if test="states != null">
        states,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="availableAmount != null">
        actual_amount,
      </if>
      <if test="availableAmount != null">
        cost,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="uId != null">
        #{uId,jdbcType=BIGINT},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="availableAmount != null">
        #{availableAmount,jdbcType=DECIMAL},
      </if>
      <if test="bankCardNo != null">
        #{bankCardNo,jdbcType=VARCHAR},
      </if>
      <if test="branchInfo != null">
        #{branchInfo,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="states != null">
        #{states,jdbcType=CHAR},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="actualAmount != null">
        #{actualAmount,jdbcType=DECIMAL},
      </if>
      <if test="cost != null">
        #{cost,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.neighbor.app.withdraw.entity.Withdraw">
    update withdraw
    <set>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="uId != null">
        u_id = #{uId,jdbcType=BIGINT},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="availableAmount != null">
        available_amount = #{availableAmount,jdbcType=DECIMAL},
      </if>
      <if test="bankCardNo != null">
        bank_card_no = #{bankCardNo,jdbcType=VARCHAR},
      </if>
      <if test="branchInfo != null">
        branch_info = #{branchInfo,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="states != null">
        states = #{states,jdbcType=CHAR},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="actualAmount != null">
        actual_amount = #{actualAmount,jdbcType=DECIMAL},
      </if>
      <if test="cost != null">
        cost = #{cost,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
 
</mapper>