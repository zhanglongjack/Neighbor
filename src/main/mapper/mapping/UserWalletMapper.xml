<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neighbor.app.wallet.dao.UserWalletMapper">
	<resultMap id="BaseResultMap" type="com.neighbor.app.wallet.entity.UserWallet">
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
		<result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
		<result column="u_id" jdbcType="BIGINT" property="uId" />
		<result column="score" jdbcType="VARCHAR" property="score" />
		<result column="available_amount" jdbcType="DECIMAL" property="availableAmount" />
		<result column="freeze_amount" jdbcType="DECIMAL" property="freezeAmount" />
		<result column="pay_password" jdbcType="DECIMAL" property="payPassword" />
	</resultMap>
	
	<sql id="Base_Column_List">
		id, create_time, update_time, u_id, score, available_amount,
		freeze_amount,pay_password
	</sql>
	
	<select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from user_wallet
		where id = #{id,jdbcType=BIGINT}
	</select>
	
	<select id="selectByPrimaryUserId" parameterType="java.lang.Long" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from user_wallet
		where u_id = #{userId,jdbcType=BIGINT}
	</select>
	<select id="lockUserWalletByUserId" resultMap="BaseResultMap" parameterType="java.lang.Long" >
		select
		<include refid="Base_Column_List" />
		from user_wallet
		where u_id = #{uid,jdbcType=BIGINT} for update
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from user_wallet
		where id = #{id,jdbcType=BIGINT}
	</delete>

	<insert id="insertSelective" parameterType="com.neighbor.app.wallet.entity.UserWallet">
		insert into user_wallet
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
			<if test="uId != null">
				u_id,
			</if>
			<if test="score != null">
				score,
			</if>
			<if test="availableAmount != null">
				available_amount,
			</if>
			<if test="freezeAmount != null">
				freeze_amount,
			</if>
			<if test="payPassword != null">
				pay_password,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="uId != null">
				#{uId,jdbcType=BIGINT},
			</if>
			<if test="score != null">
				#{score,jdbcType=DECIMAL},
			</if>
			<if test="availableAmount != null">
				#{availableAmount,jdbcType=DECIMAL},
			</if>
			<if test="freezeAmount != null">
				#{freezeAmount,jdbcType=DECIMAL},
			</if>
			<if test="payPassword != null">
				#{payPassword,jdbcType=DECIMAL},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.neighbor.app.wallet.entity.UserWallet">
		update user_wallet
		<set>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="uId != null">
				u_id = #{uId,jdbcType=BIGINT},
			</if>
			<if test="score != null">
				score = #{score,jdbcType=DECIMAL},
			</if>
			<if test="availableAmount != null">
				available_amount = #{availableAmount,jdbcType=DECIMAL},
			</if>
			<if test="freezeAmount != null">
				freeze_amount = #{freezeAmount,jdbcType=DECIMAL},
			</if>
			<if test="payPassword != null">
				pay_password = #{payPassword,jdbcType=DECIMAL},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="payPasswordEdit" parameterType="com.neighbor.app.wallet.entity.UserWallet">
		update user_wallet
		<set>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="payPassword != null">
				pay_password = #{payPassword,jdbcType=VARCHAR},
			</if>
		</set>
		where u_id = #{uId,jdbcType=BIGINT}
	</update>

	<update id="updateWalletAmount" parameterType="com.neighbor.app.wallet.entity.UserWallet">
		update user_wallet 
		set available_amount = available_amount + #{availableAmount}
		<if test="freezeAmount != null and freezeAmount > 0">
			,freeze_amount = freeze_amount + #{freezeAmount}
		</if>
		<if test="score != null">
			,score = score + #{score}
		</if>
		where u_id = #{uId}
	</update>
	
	
</mapper>