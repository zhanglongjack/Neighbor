<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neighbor.app.group.dao.GroupMapper" >
  <resultMap id="BaseResultMap" type="com.neighbor.app.group.entity.Group" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="cre_date" property="creDate" jdbcType="VARCHAR" />
    <result column="cre_time" property="creTime" jdbcType="VARCHAR" />
    <result column="group_name" property="groupName" jdbcType="VARCHAR" />
    <result column="user_num" property="userNum" jdbcType="BIGINT" />
    <result column="online_num" property="onlineNum" jdbcType="BIGINT" />
    <result column="group_notice" property="groupNotice" jdbcType="VARCHAR" />
    <result column="group_head_img_url" property="groupHeadImgUrl" jdbcType="VARCHAR" />
    <result column="states" property="states" jdbcType="VARCHAR" />
    <result column="game_id" property="gameId" jdbcType="BIGINT" />
    <result column="red_pack_amount_limit" property="redPackAmountLimit" jdbcType="VARCHAR" />
  </resultMap>

  <resultMap id="FullResultMap" type="com.neighbor.app.group.entity.Group" extends="BaseResultMap" >
    <result column="groupOwnerUserId" property="groupOwnerUserId" jdbcType="BIGINT" />
    <result column="show_msg_switch" property="showMsgSwitch" jdbcType="VARCHAR" />
    <result column="show_nick_name_switch" property="showNickNameSwitch" jdbcType="VARCHAR" />
    <association property="game" resultMap="com.neighbor.app.game.dao.GameMapper.BaseResultMap" />
  </resultMap>

  <resultMap id="robotGroupRelationResultMap" type="com.neighbor.app.group.entity.Group" extends="BaseResultMap" >
		<association property="game" resultMap="com.neighbor.app.game.dao.GameMapper.BaseResultMap" />
		<association property="robot" resultMap="com.neighbor.app.robot.dao.RobotConfigMapper.BaseResultMap" />
  </resultMap>
  
  <resultMap id="JoinQueryResultMap" type="com.neighbor.app.group.entity.Group"  extends="BaseResultMap"> 
    	<result column="group_id" property="groupId" jdbcType="BIGINT" />
  </resultMap>

  
  <sql id="Base_Column_List" >
     g.id, g.create_time, g.update_time, g.cre_date, g.cre_time, g.group_name, g.user_num, g.online_num,
    g.group_notice, g.group_head_img_url, g.states,g.game_id,g.red_pack_amount_limit
  </sql>
  
  <sql id="dynamicWhere">
    <where>
      <if test="id != null">and g.id=#{id}</if>
      <if test="createTime != null ">and g.create_time=#{createTime}</if>
      <if test="updateTime != null ">and g.update_time=#{updateTime}</if>
      <if test="creDate != null and creDate.length()>0">and g.cre_date=#{creDate}</if>
      <if test="creTime != null and creTime.length()>0">and g.cre_time=#{creTime}</if>
      <if test="groupName != null and groupName.length()>0">and g.group_name=#{groupName}</if>
      <if test="userNum != null">and g.user_num=#{userNum}</if>
      <if test="onlineNum != null">and g.online_num=#{onlineNum}</if>
      <if test="groupNotice != null and groupNotice.length()>0">and g.group_notice=#{groupNotice}</if>
      <if test="states != null and states.length()>0">and g.states=#{states}</if>
      <if test="gameId != null">and g.game_id=#{gameId}</if>
      <if test="redPackAmountLimit != null">and g.red_pack_amount_limit=#{redPackAmountLimit}</if>
      <if test="gameType != null and gameType.length()>0 " >
        and ge.game_type=#{gameType,jdbcType=VARCHAR}
      </if>
    </where>
  </sql>

  <select id="selectAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from `group` g
    order by g.create_time
  </select>
  
  <select id="selectPageByObjectForList" parameterType="com.neighbor.app.group.entity.Group"
          resultMap="FullResultMap">
    select
    g.*,ge.*
    ,(select gm.user_id from group_member gm where g.id=gm.group_id and gm.member_type=1 limit 1) as groupOwnerUserId
    <if test="userId != null" >
       ,gm.show_msg_switch,gm.show_nick_name_switch
    </if>
    <if test="userId == null" >
      ,'0' as show_msg_switch, '0' as show_nick_name_switch
    </if>
    from `group` g
    <if test="userId != null" >
      INNER JOIN group_member gm on g.id=gm.group_id and gm.user_id=#{userId,jdbcType=BIGINT}
    </if>
    INNER JOIN game ge on  g.game_id = ge.id
    <include refid="dynamicWhere" />
    order by g.create_time
    limit #{pageTools.rowIndex},#{pageTools.pageSize}
  </select>

  <select id="selectPageTotalCount" parameterType="com.neighbor.app.group.entity.Group"
          resultType="Long">
    select
    count(1)
    from `group` g
    <if test="userId != null" >
      INNER JOIN group_member gm on g.id=gm.group_id and gm.user_id=#{userId,jdbcType=BIGINT}
    </if>
    <if test="gameType != null and gameType.length()>0 " >
      INNER JOIN game ge on  g.game_id = ge.id and ge.game_type=#{gameType,jdbcType=VARCHAR}
    </if>
    <include refid="dynamicWhere" />
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from `group`  g
    where g.id = #{id,jdbcType=BIGINT}
  </select>
  
  <select id="selectBySelective" resultMap="BaseResultMap" parameterType="com.neighbor.app.group.entity.Group" >
    select 
    <include refid="Base_Column_List" />
    from `group`  g
    <include refid="dynamicWhere" />
  </select>
  
  <sql id="robotGroupRelationDynamicWhere">
    <where>
      <if test="id != null">and g.id=#{id}</if>
      <if test="groupName != null and groupName.length()>0">and g.group_name like CONCAT(#{groupName},'%')</if>
      <if test="game.gameName != null and game.gameName.length()>0">and gm.game_name like CONCAT(#{game.gameName},'%')</if>
      <if test="game.gameType != null">and gm.game_type=#{game.gameType}</if>
    </where>
  </sql>
  
  <select id="selectPageByRobotGroupRelation" parameterType="com.neighbor.app.group.entity.Group"
          resultMap="robotGroupRelationResultMap">
	select g.*,gm.*,t.* from `group` g
    inner join game gm on gm.id=g.game_id
    left join (
		select 
			gmb.group_id,rc.*
		from group_member gmb
		left join users_info u on u.id = gmb.user_id
		left join robot_config rc on rc.robot_id = u.robot_sno 
		where rc.robot_id = #{robot.robotId}
	) t on t.group_id=g.id
	<include refid="robotGroupRelationDynamicWhere" />
    order by g.id
    limit #{pageTools.rowIndex},#{pageTools.pageSize}
  </select>
  
  <select id="selectPageTotalCountByRobotGroupRelation" parameterType="com.neighbor.app.group.entity.Group"
          resultType="Long">
	select count(1)
	from `group` g
    inner join game gm on gm.id=g.game_id
    left join (
		select 
			gmb.group_id,rc.*
		from group_member gmb
		left join users_info u on u.id = gmb.user_id
		left join robot_config rc on rc.robot_id = u.robot_sno 
		where rc.robot_id = #{robot.robotId}
	) t on t.group_id=g.id
	<include refid="robotGroupRelationDynamicWhere" />
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from `group`
    where id = #{id,jdbcType=BIGINT}
  </delete>
  
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.neighbor.app.group.entity.Group" >
    insert into `group`
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="creDate != null" >
        cre_date,
      </if>
      <if test="creTime != null" >
        cre_time,
      </if>
      <if test="groupName != null" >
        group_name,
      </if>
      <if test="userNum != null" >
        user_num,
      </if>
      <if test="onlineNum != null" >
        online_num,
      </if>
      <if test="groupNotice != null" >
        group_notice,
      </if>
      <if test="groupHeadImgUrl != null" >
        group_head_img_url,
      </if>
      <if test="states != null" >
        states,
      </if>
      <if test="gameId != null" >
        game_id,
      </if>
      <if test="states != null" >
        red_pack_amount_limit,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creDate != null" >
        #{creDate,jdbcType=VARCHAR},
      </if>
      <if test="creTime != null" >
        #{creTime,jdbcType=VARCHAR},
      </if>
      <if test="groupName != null" >
        #{groupName,jdbcType=VARCHAR},
      </if>
      <if test="userNum != null" >
        #{userNum,jdbcType=BIGINT},
      </if>
      <if test="onlineNum != null" >
        #{onlineNum,jdbcType=BIGINT},
      </if>
      <if test="groupNotice != null" >
        #{groupNotice,jdbcType=VARCHAR},
      </if>
      <if test="groupHeadImgUrl != null" >
        #{groupHeadImgUrl,jdbcType=VARCHAR},
      </if>
      <if test="states != null" >
        #{states,jdbcType=VARCHAR},
      </if>
      <if test="gameId != null" >
        #{gameId,jdbcType=BIGINT},
      </if>
      <if test="redPackAmountLimit != null" >
        #{redPackAmountLimit,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.neighbor.app.group.entity.Group" >
    update `group`
    <set >
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creDate != null" >
        cre_date = #{creDate,jdbcType=VARCHAR},
      </if>
      <if test="creTime != null" >
        cre_time = #{creTime,jdbcType=VARCHAR},
      </if>
      <if test="groupName != null" >
        group_name = #{groupName,jdbcType=VARCHAR},
      </if>
      <if test="userNum != null" >
        user_num = #{userNum,jdbcType=BIGINT},
      </if>
      <if test="onlineNum != null" >
        online_num = #{onlineNum,jdbcType=BIGINT},
      </if>
      <if test="groupNotice != null" >
        group_notice = #{groupNotice,jdbcType=VARCHAR},
      </if>
      <if test="groupHeadImgUrl != null" >
        group_head_img_url = #{groupHeadImgUrl,jdbcType=VARCHAR},
      </if>
      <if test="states != null" >
        states = #{states,jdbcType=VARCHAR},
      </if>
      <if test="gameId != null" >
        game_id = #{gameId,jdbcType=BIGINT},
      </if>
      <if test="redPackAmountLimit != null" >
        red_pack_amount_limit = #{redPackAmountLimit,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

</mapper>