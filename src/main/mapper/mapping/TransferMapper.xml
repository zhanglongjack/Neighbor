<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neighbor.app.transfer.dao.TransferMapper">
  <resultMap id="BaseResultMap" type="com.neighbor.app.transfer.entity.Transfer">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="u_id" jdbcType="BIGINT" property="uId" />
    <result column="transfer_way" jdbcType="CHAR" property="transferWay" />
    <result column="transfer_user_id" jdbcType="BIGINT" property="transferUserId" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="available_amount" jdbcType="DECIMAL" property="availableAmount" />
    <result column="states" jdbcType="CHAR" property="states" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
  </resultMap>
  <resultMap id="TransferRecordMap" type="com.neighbor.app.transfer.po.TransferRecord">
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="transfer_way" jdbcType="CHAR" property="transferWay" />
    <result column="transferUserName" jdbcType="VARCHAR" property="transferUserName" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="available_amount" jdbcType="DECIMAL" property="availableAmount" />
    <result column="states" jdbcType="CHAR" property="states" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
  </resultMap>
  <sql id="Base_Column_List">
     t.id,  t.order_no,  t.create_time,  t.update_time,  t.u_id,  t.transfer_way,  t.transfer_user_id,  t.amount,t.available_amount,
     t.states,  t.remarks
  </sql>

  <sql id="dynamicWhere">
		<where>
			<if test="id != null"> t.id=#{id}</if>
			<if test="uId != null">and  t.u_id=#{uId}</if>
			<if test="transferUserId != null ">and  t.transfer_user_id=#{transferUserId}</if>
			<if test="transferWay != null and transferWay.length()>0">and  t.transfer_way=#{transferWay}</if>
			<if test="states != null and states.length()>0">and  t.states=#{states}</if>
			<if test="orderNo != null and orderNo.length()>0">and  t.order_no=#{orderNo}</if>
          <if test="beginTime != null"> <![CDATA[ and  t.create_time >= str_to_date(#{beginTime}, '%Y-%m-%d %H:%i:%s') ]]> </if>
          <if test="endTime != null"> <![CDATA[ and  t.create_time <=  str_to_date(#{endTime}, '%Y-%m-%d %H:%i:%s') ]]> </if>
          <if test="transferBack != null and transferBack.length()>0"> <![CDATA[ and  hour(timediff(date_format(now(),'%Y-%m-%d %H:00:00'),date_format(t.create_time,'%Y-%m-%d %H:00:00'))) >=24 ]]> </if>
        </where>
	</sql>
	
  <select id="selectAll" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from  transfer t
		order by  t.create_time
  </select>
  
	<select id="selectPageByObjectForList" parameterType="com.neighbor.app.transfer.entity.Transfer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from transfer  t
		<include refid="dynamicWhere" />
		order by  t.create_time desc
		limit #{pageTools.rowIndex},#{pageTools.pageSize}
	</select>

  <select id="selectPageTotalCountForApp" parameterType="com.neighbor.app.transfer.entity.Transfer"
          resultType="Long">
    select
    count(1)
    from transfer t inner join users_info u on (t.transfer_user_id = u.id)
    <include refid="dynamicWhere" />
  </select>

  <select id="selectPageForApp" parameterType="com.neighbor.app.transfer.entity.Transfer"
          resultMap="TransferRecordMap">
    select
    t.id,  t.order_no,  t.create_time,  t.update_time,  t.u_id,  t.transfer_way, u.real_name as transferUserName,  t.amount,t.available_amount,
    t.states,  t.remarks
    from transfer t inner join users_info u on (t.transfer_user_id = u.id)
    <include refid="dynamicWhere" />
    order by t.create_time desc
    limit #{pageTools.rowIndex},#{pageTools.pageSize}
  </select>
	
	<select id="selectPageTotalCount" parameterType="com.neighbor.app.transfer.entity.Transfer"
		resultType="Long">
		select
			count(1)
		from transfer t
		<include refid="dynamicWhere" />
	</select>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from transfer t
    where t.id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from transfer
    where id = #{id,jdbcType=BIGINT}
  </delete>
 
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.neighbor.app.transfer.entity.Transfer">
    insert into transfer
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="uId != null">
        u_id,
      </if>
      <if test="transferWay != null">
        transfer_way,
      </if>
      <if test="transferUserId != null">
        transfer_user_id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="availableAmount != null">
        available_amount,
      </if>
      <if test="states != null">
        states,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="uId != null">
        #{uId,jdbcType=BIGINT},
      </if>
      <if test="transferWay != null">
        #{transferWay,jdbcType=CHAR},
      </if>
      <if test="transferUserId != null">
        #{transferUserId,jdbcType=BIGINT},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="availableAmount != null">
        #{availableAmount,jdbcType=DECIMAL},
      </if>
      <if test="states != null">
        #{states,jdbcType=CHAR},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.neighbor.app.transfer.entity.Transfer">
    update transfer
    <set>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="uId != null">
        u_id = #{uId,jdbcType=BIGINT},
      </if>
      <if test="transferWay != null">
        transfer_way = #{transferWay,jdbcType=CHAR},
      </if>
      <if test="transferUserId != null">
        transfer_user_id = #{transferUserId,jdbcType=BIGINT},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="availableAmount != null">
        available_amount = #{availableAmount,jdbcType=DECIMAL},
      </if>
      <if test="states != null">
        states = #{states,jdbcType=CHAR},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
 
</mapper>