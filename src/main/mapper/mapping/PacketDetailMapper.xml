<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neighbor.app.packet.dao.PacketDetailMapper">
	<resultMap id="BaseResultMap" type="com.neighbor.app.packet.entity.PacketDetail">
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="d_packet_id" jdbcType="BIGINT" property="dPacketId" />
		<result column="got_user_id" jdbcType="BIGINT" property="gotUserId" />
		<result column="got_amount" jdbcType="DECIMAL" property="gotAmount" />
		<result column="is_got_bomb" jdbcType="VARCHAR" property="isGotBomb" />
		<result column="is_free" jdbcType="VARCHAR" property="isFree" />
		<result column="is_maximum" jdbcType="VARCHAR" property="isMaximum" />
		<result column="create_date" jdbcType="VARCHAR" property="createDate" />
		<result column="create_time" jdbcType="VARCHAR" property="createTime" />
		<result column="head_url" jdbcType="VARCHAR" property="headUrl" />
	</resultMap>
	
	<resultMap id="resultWithParentMap" type="com.neighbor.app.packet.entity.PacketDetail" extends="BaseResultMap">
		<collection property="packet" column="d_packet_id" 
		select="com.neighbor.app.packet.dao.PacketMapper.selectByPrimaryKey">
        </collection>
	</resultMap>
	
	<resultMap id="resultWithNickNameMap" type="com.neighbor.app.packet.entity.PacketDetail"  extends="BaseResultMap">
		<collection column="got_user_id"  property="nickName" ofType="String" 
		select="com.neighbor.app.users.dao.UserInfoMapper.selectNickNameByPrimaryKey">
		</collection>
	</resultMap>
	
	<sql id="Base_Column_List">
		id, d_packet_id, got_user_id, got_amount, is_got_bomb,
		is_free,
		is_maximum, create_date,
		create_time,head_url
	</sql>

	<sql id="dynamicWhere">
		<where>
			<if test="id != null">and id=#{id}</if>
			<if test="dPacketId != null">
				and d_packet_id = #{dPacketId,jdbcType=BIGINT}
			</if>
			<if test="gotUserId != null">
				and got_user_id = #{gotUserId,jdbcType=BIGINT}
			</if>
			<if test="gotAmount != null">
				and got_amount = #{gotAmount,jdbcType=DECIMAL}
			</if>
			<if test="isGotBomb != null">
				and is_got_bomb = #{isGotBomb,jdbcType=VARCHAR}
			</if>
			<if test="isFree != null">
				and is_free = #{isFree,jdbcType=VARCHAR}
			</if>
			<if test="createYear != null and createYear.length() > 0">
				and create_date like CONCAT(#{createYear},'%')
			</if>
		</where>
	</sql>

	<select id="selectByPrimaryKey" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from packet_detail
		where id = #{id,jdbcType=BIGINT}
	</select>

	<select id="queryGotPacketSumAmount" parameterType="com.neighbor.app.packet.entity.PacketDetail"
		resultType="java.util.HashMap">
		select
		ifnull(sum(got_amount),0) gotAmount,
		ifnull(sum(is_maximum),0) gotBestPacketNum,
		count(1) gotPacketNum
		from packet_detail
		<include refid="dynamicWhere" />
	</select>

	<select id="selectPageByObjectForList" parameterType="com.neighbor.app.packet.entity.PacketDetail"
		resultMap="resultWithParentMap">
		select
		<include refid="Base_Column_List" />
		from packet_detail
		<include refid="dynamicWhere" />
		order by create_time desc,create_time desc
		limit
		#{pageTools.rowIndex},#{pageTools.pageSize}
	</select>

	<select id="selectPageTotalCount" parameterType="com.neighbor.app.packet.entity.PacketDetail"
		resultType="Long">
		select
		count(1)
		from packet_detail
		<include refid="dynamicWhere" />
	</select>

	<select id="selectPacketDetailByPacketId" parameterType="java.lang.Long"
		resultMap="resultWithNickNameMap">
		select
		<include refid="Base_Column_List" />
		from packet_detail
		where d_packet_id = #{packetId}
	</select>

	<insert id="insertSelective" keyProperty="id"
		parameterType="com.neighbor.app.packet.entity.PacketDetail"
		useGeneratedKeys="true">
		insert into packet_detail
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="dPacketId != null">
				d_packet_id,
			</if>
			<if test="gotUserId != null">
				got_user_id,
			</if>
			<if test="gotAmount != null">
				got_amount,
			</if>
			<if test="isGotBomb != null">
				is_got_bomb,
			</if>
			<if test="isFree != null">
				is_free,
			</if>
			<if test="isMaximum != null">
				is_maximum,
			</if>
			<if test="createDate != null">
				create_date,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="headUrl != null">
				head_url,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="dPacketId != null">
				#{dPacketId,jdbcType=BIGINT},
			</if>
			<if test="gotUserId != null">
				#{gotUserId,jdbcType=BIGINT},
			</if>
			<if test="gotAmount != null">
				#{gotAmount,jdbcType=DECIMAL},
			</if>
			<if test="isGotBomb != null">
				#{isGotBomb,jdbcType=VARCHAR},
			</if>
			<if test="isFree != null">
				#{isFree,jdbcType=VARCHAR},
			</if>
			<if test="isMaximum != null">
				#{isMaximum,jdbcType=VARCHAR},
			</if>
			<if test="createDate != null">
				#{createDate,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=VARCHAR},
			</if>
			<if test="headUrl != null">
				#{headUrl,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.neighbor.app.packet.entity.PacketDetail">
		update packet_detail
		<set>
			<if test="dPacketId != null">
				d_packet_id = #{dPacketId,jdbcType=BIGINT},
			</if>
			<if test="gotUserId != null">
				got_user_id = #{gotUserId,jdbcType=BIGINT},
			</if>
			<if test="gotAmount != null">
				got_amount = #{gotAmount,jdbcType=DECIMAL},
			</if>
			<if test="isGotBomb != null">
				is_got_bomb = #{isGotBomb,jdbcType=VARCHAR},
			</if>
			<if test="isFree != null">
				is_free = #{isFree,jdbcType=VARCHAR},
			</if>
			<if test="isMaximum != null">
				is_maximum = #{isMaximum,jdbcType=VARCHAR},
			</if>
			<if test="createDate != null">
				create_date = #{createDate,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
</mapper>