<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neighbor.app.group.dao.GroupMemberMapper" >
  <resultMap id="BaseResultMap" type="com.neighbor.app.group.entity.GroupMember" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="group_id" property="groupId" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="member_type" property="memberType" jdbcType="VARCHAR" />
    <result column="show_msg_switch" property="showMsgSwitch" jdbcType="VARCHAR" />
    <result column="show_nick_name_switch" property="showNickNameSwitch" jdbcType="VARCHAR" />
    <result column="unread_message_num" property="unreadMessageNum" jdbcType="BIGINT" />
    <result column="states" property="states" jdbcType="VARCHAR" />
    <result column="automatic_grab_switch" property="automaticGrabSwitch" jdbcType="VARCHAR" />
    <result column="topping_flag" property="toppingFlag" jdbcType="VARCHAR" />
  </resultMap>

  <resultMap id="FullResultMap" type="com.neighbor.app.group.entity.GroupMember" extends="BaseResultMap" >
    <result column="friendNickName" property="friendNickName" jdbcType="VARCHAR" />
    <result column="friendDesc" property="friendDesc" jdbcType="VARCHAR" />
    <result column="friendHeadUrl" property="friendHeadUrl" jdbcType="VARCHAR" />
  </resultMap>

  <sql id="Base_Column_List" >
    id, create_time, update_time, group_id, user_id, member_type, show_msg_switch, show_nick_name_switch, 
    unread_message_num, states, automatic_grab_switch, topping_flag
  </sql>

  <sql id="dynamicWhere">
    <where>
      <if test="id != null">and t.id=#{id}</if>
      <if test="createTime != null ">and t.create_time=#{createTime}</if>
      <if test="updateTime != null ">and t.update_time=#{updateTime}</if>
      <if test="groupId != null">and t.group_id=#{groupId}</if>
      <if test="userId != null ">and t.user_id=#{userId}</if>
      <if test="memberType != null and memberType.length()>0">and t.member_type=#{memberType}</if>
      <if test="showMsgSwitch != null and showMsgSwitch.length()>0">and t.show_msg_switch=#{showMsgSwitch}</if>
      <if test="showNickNameSwitch != null and showNickNameSwitch.length()>0">and t.show_nick_name_switch=#{showNickNameSwitch}</if>
      <if test="unreadMessageNum != null ">and t.unread_message_num=#{unreadMessageNum}</if>
      <if test="states != null and states.length()>0">and t.states=#{states}</if>
      <if test="automaticGrabSwitch != null and automaticGrabSwitch.length()>0">and t.automatic_grab_switch=#{automaticGrabSwitch}</if>
      <if test="toppingFlag != null and toppingFlag.length()>0">and t.topping_flag=#{toppingFlag}</if>
    </where>
  </sql>

  <select id="selectAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from `group_member`
    order by create_time
  </select>
  
  <select id="selectBySelective" resultMap="BaseResultMap" parameterType="com.neighbor.app.group.entity.GroupMember">
    select
    <include refid="Base_Column_List" />
    from `group_member` t
    <include refid="dynamicWhere" />
  </select>

  <select id="selectPageByObjectForList" parameterType="com.neighbor.app.group.entity.GroupMember"
          resultMap="BaseResultMap">
    select
    t.*,u.nick_name as friendNickName,u.user_photo as friendHeadUrl 
    from `group_member` t left join users_info u on t.user_id = u.id
    <if test="friendUserId != null"> LEFT JOIN friend f on t.user_id = f.friend_user_id and f.user_id = #{friendUserId}</if>
    <include refid="dynamicWhere" />
    order by t.member_type desc,t.create_time
    limit #{pageTools.rowIndex},#{pageTools.pageSize}
  </select>

  <select id="selectPageTotalCount" parameterType="com.neighbor.app.group.entity.GroupMember"
          resultType="Long">
    select
    count(1)
    from `group_member` t
    <include refid="dynamicWhere" />
  </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from `group_member` 
    where id = #{id,jdbcType=BIGINT}
  </select>

  <select id="selectGroupMember" resultMap="BaseResultMap" parameterType="com.neighbor.app.group.entity.GroupMember" >
    select
    <include refid="Base_Column_List" />
    from `group_member`
    where user_id = #{userId,jdbcType=BIGINT} and group_id = #{groupId,jdbcType=BIGINT} limit 1
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from group_member
    where id = #{id,jdbcType=BIGINT}
  </delete>

  <insert id="insertSelective" parameterType="com.neighbor.app.group.entity.GroupMember" >
    insert into `group_member`
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="groupId != null" >
        group_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="memberType != null" >
        member_type,
      </if>
      <if test="showMsgSwitch != null" >
        show_msg_switch,
      </if>
      <if test="showNickNameSwitch != null" >
        show_nick_name_switch,
      </if>
      <if test="unreadMessageNum != null" >
        unread_message_num,
      </if>
      <if test="states != null" >
        states,
      </if>
      <if test="automaticGrabSwitch != null" >
        automatic_grab_switch,
      </if>
      <if test="toppingFlag != null" >
        topping_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="groupId != null" >
        #{groupId,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="memberType != null" >
        #{memberType,jdbcType=VARCHAR},
      </if>
      <if test="showMsgSwitch != null" >
        #{showMsgSwitch,jdbcType=VARCHAR},
      </if>
      <if test="showNickNameSwitch != null" >
        #{showNickNameSwitch,jdbcType=VARCHAR},
      </if>
      <if test="unreadMessageNum != null" >
        #{unreadMessageNum,jdbcType=BIGINT},
      </if>
      <if test="states != null" >
        #{states,jdbcType=VARCHAR},
      </if>
      <if test="automaticGrabSwitch != null" >
        #{automaticGrabSwitch,jdbcType=VARCHAR},
      </if>
      <if test="toppingFlag != null" >
        #{toppingFlag,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.neighbor.app.group.entity.GroupMember" >
    update `group_member`
    <set >
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="groupId != null" >
        group_id = #{groupId,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="memberType != null" >
        member_type = #{memberType,jdbcType=VARCHAR},
      </if>
      <if test="showMsgSwitch != null" >
        show_msg_switch = #{showMsgSwitch,jdbcType=VARCHAR},
      </if>
      <if test="showNickNameSwitch != null" >
        show_nick_name_switch = #{showNickNameSwitch,jdbcType=VARCHAR},
      </if>
      <if test="unreadMessageNum != null" >
        unread_message_num = #{unreadMessageNum,jdbcType=BIGINT},
      </if>
      <if test="states != null" >
        states = #{states,jdbcType=VARCHAR},
      </if>
      <if test="automaticGrabSwitch != null" >
        automatic_grab_switch = #{automaticGrabSwitch,jdbcType=VARCHAR},
      </if>
      <if test="toppingFlag != null" >
        topping_flag = #{toppingFlag,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

</mapper>